var e=Object.defineProperty,n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,a=(n,t,r)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[t]=r,i=(e,i)=>{for(var s in i||(i={}))t.call(i,s)&&a(e,s,i[s]);if(n)for(var s of n(i))r.call(i,s)&&a(e,s,i[s]);return e};"undefined"!=typeof require&&require;import{c as s,a as o,b as c,u as d,d as l,h as u,e as g,f as p,s as h,g as m,l as y,j as f,F as b,i as k,R as x,k as v}from"./vendor.1a15226d.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver((e=>{for(const t of e)if("childList"===t.type)for(const e of t.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&n(e)})).observe(document,{childList:!0,subtree:!0})}function n(e){if(e.ep)return;e.ep=!0;const n=function(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerpolicy&&(n.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?n.credentials="include":"anonymous"===e.crossorigin?n.credentials="omit":n.credentials="same-origin",n}(e);fetch(e.href,n)}}();const C=o("player/deal"),w=o("player/playcard"),A=o("player/undo"),N=o("player/toggleoption"),E=o("game/reset"),S=o("game/deal"),R=o("game/placecard"),O=o("game/fliproyal"),L=o("game/flipcard"),P=o("game/setroyaltyaside"),T=o("game/resetstack"),I=o("game/addtostack"),$=o("game/addarmortoroyal"),H=o("game/destroyroyals"),D=o("game/loadteststate"),W=()=>({turn:-1,deckInHand:[],currentCard:void 0,skippedRoyalty:[],grid:[...Array(25)].map((()=>[])),bonus:[]}),j=s(W(),(e=>{e.addCase(C,((e,n)=>{e.turn=0})).addCase(w,((e,n)=>{e.turn=(e.turn||0)+1})).addCase(E,((e,n)=>W())).addCase(S,((e,n)=>{const t=n.payload,r=t.shift();e.deckInHand=t,e.currentCard=r})).addCase(D,((e,n)=>i({},JSON.parse(JSON.stringify(n.payload))))).addCase(P,((e,n)=>{const{skippedRoyalty:t,currentCard:r}=e;r&&t.push(r)})).addCase(R,((e,n)=>{const{grid:t,currentCard:r}=e,{payload:a}=n;r&&t[a].unshift(r)})).addCase(O,((e,n)=>{const{skippedRoyalty:t}=e,r=t.shift();e.currentCard=r})).addCase(L,((e,n)=>{const{deckInHand:t}=e,r=t.shift();e.currentCard=r})).addCase(T,((e,n)=>{const{grid:t,deckInHand:r,currentCard:a}=e,{payload:i}=n;r.push(...t[i]),a&&(t[i]=[a])})).addCase(I,((e,n)=>{const{grid:t,currentCard:r}=e,{payload:a}=n;r&&t[a].unshift(r)})).addCase($,((e,n)=>{const{grid:t}=e,{payload:r}=n;t[r].unshift({card:2,suit:""})})).addCase(H,((e,n)=>{const{grid:t,bonus:r}=e,{payload:a}=n;a.forEach((e=>t[e].push({destroyed:!0,card:-1,suit:""}))),a.length>1&&r.push(a.map((e=>t[e])))}))})),B=[6,7,8,11,13,16,17,18],M=[6,7,8,11,12,13,16,17,18],U=[1,2,3,5,9,10,14,15,19,21,22,23],J={6:[{payload:[7,8],target:9},{payload:[11,16],target:21}],7:[{payload:[12,17],target:22}],8:[{payload:[6,7],target:5},{payload:[13,18],target:23}],11:[{payload:[12,13],target:14}],13:[{payload:[11,12],target:10}],16:[{payload:[17,18],target:19},{payload:[6,11],target:1}],17:[{payload:[7,12],target:2}],18:[{payload:[16,17],target:15},{payload:[8,13],target:3}]},G={6:[1,5],7:[2],8:[3,9],11:[10],13:[14],16:[15,21],17:[22],18:[23,19]},K="splash",z="menu",F="game",V=o("player/toggleoption"),Y=o("scenes/splash"),_=o("scenes/menu"),q=o("scenes/game"),Q=s(((e=K)=>({scene:e,options:{}}))(),(e=>{e.addCase(V,((e,n)=>{n.payload.harder&&(e.options.kidding=!1),n.payload.kidding&&(e.options.harder=!1),e.options=i(i({},e.options),n.payload)})).addCase(Y,((e,n)=>{e.scene=K})).addCase(_,((e,n)=>{e.scene=z})).addCase(q,((e,n)=>{e.scene=F})).addCase(D,((e,n)=>{e.scene=F}))})),Z=c({reducer:{game:d(j,{limit:4,groupBy:(e,n,t)=>n.turn}),meta:Q}});var X='\n@import url("https://fonts.googleapis.com/css2?family=Thasadith:wght@400;700&display=swap");\n/* Styles for the layout and shell */\nbody {\n  font-family: "Thasadith", -apple-system, Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue;\n  font-size: 16px;\n  background-color: #f3f7fb;\n  color: #3d4852;\n  margin: 0px;\n  /* color: hsl(208, 12%, 58%); */\n  background: linear-gradient(0deg, rgba(0, 114, 255, 0.2), rgba(0, 198, 255, 0.2));\n  background-attachment: fixed;\n  height: 100vh;\n  width: 100vw;\n}\n.heading {\n  display: flex;\n  justify-content: center;\n}\nh1 {\n  margin-top: 5px;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  font-weight: 300;\n  font-size: 2em;\n  color: #636c74;\n}\nh2 {\n  margin-top: 0;\n  margin-bottom: 0;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  font-weight: 300;\n}\nul {\n  margin-top: 0;\n  padding-inline-start: 16px;\n  list-style-type: none;\n}\n/* Buttons! Buttons! Buttons! */\nbutton {\n  margin: 5px;\n  max-width: 160px;\n  padding: 4px;\n  color: #636c74;\n  background-color: #f4f8fa;\n  border-radius: 5px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  border: none;\n}\nbutton:focus {\n  outline: none;\n}\nbutton:hover {\n  background-color: #d8e9f8;\n}\nbutton:disabled {\n  background-color: rgba(239, 239, 239, 0.3);\n  color: rgba(16, 16, 16, 0.3);\n  border-color: rgba(118, 118, 118, 0.3);\n}\n/* Extra fun things */\n/* Thanks go to http://tholman.com/github-corners/ */\n.github-corner:hover .octo-arm {\n  animation: octocat-wave 560ms ease-in-out;\n}\n@keyframes octocat-wave {\n  0%, 100% {\n    transform: rotate(0);\n  }\n  20%, 60% {\n    transform: rotate(-25deg);\n  }\n  40%, 80% {\n    transform: rotate(10deg);\n  }\n}\n@media (max-width: 500px) {\n  .github-corner:hover .octo-arm {\n    animation: none;\n  }\n\n  .github-corner .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n}';l({tag:"octo-corner",render:()=>u`
<!-- Thanks go to http://tholman.com/github-corners/ -->
<a
  href="https://github.com/seanmailander/gridcannon"
  class="github-corner"
  aria-label="View source on Github"
  ><svg
    width="80"
    height="80"
    viewBox="0 0 250 250"
    style="
  fill: #30228f;
  color: #665bb2;
  position: absolute;
  top: 0;
  border: 0;
  right: 0;
"
    aria-hidden="true"
  >
    <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path>
    <path
      d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"
      fill="currentColor"
      style="transform-origin: 130px 106px"
      class="octo-arm"
    ></path>
    <path
      d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"
      fill="currentColor"
      class="octo-body"
    ></path></svg></a>
`.style(X)});const ee=()=>g(),ne=p,te={ACE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,SIX:6,SEVEN:7,EIGHT:8,NINE:9,TEN:10,JACK:11,QUEEN:12,KING:13},re={HEARTS:"h",DIAMONDS:"d",CLUBS:"c",SPADES:"s"},ae={[re.HEARTS]:"red",[re.DIAMONDS]:"red",[re.CLUBS]:"black",[re.SPADES]:"black"},ie=e=>({"":"no-suit",[re.HEARTS]:"red",[re.DIAMONDS]:"red",[re.CLUBS]:"black",[re.SPADES]:"black"}[e||""]),se=({seed:e,kidding:n,harder:t})=>{const r=[...Object.keys(re).map((e=>Object.keys(te).map((n=>({suit:re[e],card:te[n]}))))).flat(),...(a=t?0:n?5:2,i={suit:"",card:0},[...Array(a).keys()].map((()=>i)))];var a,i;return(e=>{const n=h(e);return e=>{for(let t=e.length-1;t>0;t--){const r=Math.floor(n()*(t+1));[e[t],e[r]]=[e[r],e[t]]}return e}})(e)(r)},oe=e=>(null==e?void 0:e.card)&&e.card>=11,ce=e=>null==e?void 0:e.destroyed,de="./images/playing_cards/",le=e=>{var n;const{suit:t,card:r,destroyed:a,empty:i}=e;if(i)return`${de}card_empty.svg`;if(a)return`${de}card_back.svg`;if(0===r)return`${de}black_joker.svg`;const s=r,o=null==(n=Object.keys(re).find((e=>re[e]===t)))?void 0:n.toLowerCase();return`${de}${s}_of_${o}.svg`},ue=e=>e.slice(-1)[0],ge=e=>B.reduce(((n,t)=>n+(e.grid[t].length>0?1:0)),0),pe=e=>{const{grid:n,currentCard:t}=e;if(!t)return[];const{card:r}=t;if(r===te.ACE||0===r||void 0===r)return M;return M.filter((e=>(e=>(n[e][0]||{card:0}).card||0)(e)<=r))},he=e=>U.filter((n=>e[n].length>0)).map((n=>e[n])),me=e=>e.game.present,ye=e=>me(e).grid,fe=m([e=>e.meta.options,ye],((e,n)=>{const{better:t}=e;return e=>{const r=J[e];return r?r.filter((({target:e})=>n[e].length>0)).filter((({target:e})=>!ue(n[e]).destroyed)).filter((({payload:e,target:r})=>(({grid:e,payload:n,targetRoyal:t,queensBehaveLikeKings:r})=>{const a=e[n[0]][0]||{},i=e[n[1]][0]||{};if(t.card===te.KING||r&&t.card===te.QUEEN)return(a.suit===t.suit?a.card:0)+(i.suit===t.suit?i.card:0);if(t.card===te.QUEEN)return(ae[a.suit]===ae[t.suit]?a.card:0)+(ae[i.suit]===ae[t.suit]?i.card:0);return a.card+i.card})({grid:n,payload:e,targetRoyal:ue(n[r]),queensBehaveLikeKings:t})>=((e,n)=>e[n].reduce(((e,n)=>e+(n.card||0)),0))(n,r))).map((({target:e})=>e)):[]}})),be=m([me,fe],((e,n)=>{const{currentCard:t}=e;if(ge(e)<8)return[];if(!t)return[];return pe(e).reduce(((e,t)=>[...e,...n(t)]),[])})),ke=m([me,be],((e,n)=>{const{currentCard:t}=e,r=12===he(e.grid).reduce(((e,n)=>e+(ce(ue(n))?1:0)),0);const a=!t&&(e=>0===e.deckInHand.length)(e),i=!a&&oe(t),s=pe(e).length,o=!a&&s>0,c=(({grid:e})=>he(e).filter((e=>!ce(ue(e)))).map((e=>e.reduce(((e,n)=>e+n.card),0))))(e),d=c.filter((e=>e>20)).length>0,l=!a&&0===s&&!d&&c.length>0,u=(null==t?void 0:t.card)===te.ACE,g=0===(null==t?void 0:t.card),p=!(a||i||o||l);return{isWon:r,isLost:!r&&(a||p||d),noCardsRemaining:a,noLegalMoves:p,unwinnableArmor:d,playingRoyalty:i,playingPips:!(a||d||l||i||u||g),playingAce:u,playingJoker:g,addingArmor:l,canTrigger:!a&&n.length>0}})),xe=m([me,ke],((e,n)=>{const{currentCard:t,grid:r}=e;if(!t||ge(e)<8)return[];const{isWon:a,isLost:i}=n;if(a||i)return[];if(oe(t)){const{suit:e}=t,n=(s=e,e=>e?(s===e.suit?200:0)+(ae[s]===ae[e.suit]?100:0)+e.card:0),a=B.reduce(((e,t)=>{if(0===G[t].filter((e=>0===r[e].length)).length)return e;const a=r[e][0],i=r[t][0];return n(i)>n(a)?t:e}),0),i=(G[a]||[]).filter((e=>0===r[e].length));if(!i||i.length<1)throw new Error("oops, didnt get a good legal move for royalty");return i}var s;const o=pe(e);return o.length<1?U.filter((e=>r[e].length>0)):o})),ve=m([ke,me],((e,n)=>{const{currentCard:t}=n;return t?e.isWon?"Game won!":e.isLost?"Game lost!":e.playingRoyalty?"Hint: Royalty must be played on the highest-value spot, by suit and by color":e.canTrigger?"Hint: Play on a trigger with sufficient payload to kill a Royal":e.playingJoker?"Hint: Joker resets a stack and returns them to your hand":e.playingAce?"Hint: Ace resets a stack and returns them to your hand":e.addingArmor?"Hint: No legal moves, add card value to Royals as Armor":"Hint: Play on any card of the same or lower value":"Hint: Restart the game"})),Ce=e=>e.reduce(((e,n)=>{return e+(oe(t=n)||ce(t)?0:n.card);var t}),0),we=e=>{const{past:n,present:t}=e,{turn:r}=t;return n.length>0&&r&&r>=1},Ae=e=>(n,t)=>{const{currentCard:r}=t().game.present;if(oe(r))return n(P());const a=B[e];return n(R(a))},Ne=e=>async(n,t)=>{const r=e||await(async e=>{const n=(new TextEncoder).encode(e),t=await crypto.subtle.digest("SHA-1",n);return btoa(String.fromCharCode(...new Uint8Array(t)))})(h().int32());n(C(r));const{harder:a,kidding:i}=t().meta.options,s=se({seed:r,harder:a,kidding:i});n(S(s));let o=0;for(;o<8;){n(Ae(o));const e=t().game.present;o=ge(e);const{skippedRoyalty:r}=e,a=8===o,i=r.length>0;n(a&&i?O():L())}},Ee=e=>f("img",{src:e}),Se=m([me],(e=>{const{currentCard:n}=e;return!oe(n)&&pe(e).length>0}));function Re(){const e=ee(),n=ne(ye),t=ne(xe),r=ne(be),a=ne(Se),i=n=>()=>{var t;e((t=n,(e,n)=>{const r=n(),a=me(r),{stronger:i}=n().meta.options;if(8!==ge(a))return;if(-1===xe(r).indexOf(t))return;e(w(t));const{skippedRoyalty:s,currentCard:o}=a;if(o&&0!==o.card&&o.card!==te.ACE?e(I(t)):e(T(t)),i&&oe(o)&&e($(t)),!oe(o)){const n=fe(r)(t);n.length>0&&e(H(n))}e(s.length>0?O():L())}))};return f(b,{children:[...Array(5)].map(((e,s)=>f("section",{className:"row",children:[...Array(5)].map(((e,o)=>{const c=5*s+o,d=n[c],l=-1!==t.indexOf(c),u=-1===M.indexOf(c),g=-1!==r.indexOf(c),p=d.length>0,h=d.length>1;let m;const y=["cardSpot"];let b;if(p)if(u){const[e]=d.slice(-1),{suit:n,card:t,destroyed:r=!1}=e;r?m=Ee(le({destroyed:r})):(m=Ee(le({suit:n,card:t})),y.push(ie(n)),l&&y.push("legal"),a&&g&&y.push("targetted"),h&&(x=Ce(d),b=f("span",{className:"badge",children:x})))}else{const{suit:e,card:n}=d[0];m=Ee(le({suit:e,card:n})),y.push(ie(e)),l&&y.push("legal"),h&&y.push("stack")}else m=Ee(le({empty:!0})),y.push(l?"legal":"unplayed");var x;return k("section",{className:y.filter((e=>!!e)).join(" "),onClick:i(c),children:[m," ",b]},`spot${c}`)}))},`row${s}`)))})}function Oe(e,n,t=!1){const r=()=>n(t?e.getState():e.getState().game.present);return{get:r,connect:(n,t,a)=>e.subscribe((()=>{n[t]!==r()&&a()}))}}const{dispatch:Le,getState:Pe}=Z;function Te(e){Le(_())}l({tag:"splash-scene",scene:Oe(Z,(e=>e.meta.scene),!0),render:function({scene:e}){return e!==K?u``:u`
    <section class="splash" onclick="${Te}">
      <section class="center-hover">
        <h1>GridCannon</h1>
        <span><small>A game by Tom Francis</small></span>
        <br />
        <br />
        <span class="call-to-action pulsate">Get started!</span>
      </section>
    </section>
  `.style(X,".splash {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  cursor: pointer;\n}\n\n.center-hover {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 6em;\n}\n\nh1 {\n  font-weight: bold;\n  font-size: 3em;\n  color: #093476;\n}\n\n.call-to-action {\n  font-weight: bold;\n  font-size: 1.5em;\n  color: #093476;\n}\n.call-to-action:hover {\n  text-decoration: underline;\n  -webkit-transition: all 0.5s;\n  -moz-transition: all 0.5s;\n  -o-transition: all 0.5s;\n  transition: all 0.5s;\n}\n\n.pulsate {\n  -webkit-animation: pulsate 2s ease-out;\n  -webkit-animation-iteration-count: infinite;\n  opacity: 0.5;\n}\n\n@-webkit-keyframes pulsate {\n  0% {\n    opacity: 0.5;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.5;\n  }\n}\n/* Smartphones (portrait and landscape) ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n  h1 {\n    font-size: 2em;\n  }\n}")}});const{dispatch:Ie,getState:$e}=Z;function He(e){Ie(q()),Ie(E()),Ie(Ne())}const De=e=>n=>{const{id:t,title:r,description:a,disabled:i}=n,s=e[t];return u`
    <div class="toggle">
      <input
        id="${t}"
        type="checkbox"
        disabled=${i}
        onchange=${(e=>(n,t)=>{Ie(N({[e]:t.target.checked}))})(t)}
        checked=${s}
      />
      <label class="toggle-item" for="${t}"></label>
      <span>${r}</span> <br />
      <small>${a}</small>
    </div>
  `},We=[{id:"recall",title:"Perfect Recall",description:"Card stacks are visible",disabled:!0},{id:"premonition",title:"Premonition",description:"Next three cards are visible",disabled:!0},{id:"timetravel",title:"Time Travel",description:"Undo up to three moves"},{id:"kidding",title:"Just Kidding",description:"Three extra jokers"}],je=[{id:"harder",title:"Harder",description:"No jokers"},{id:"better",title:"Better",description:"Queens behave like Kings"},{id:"faster",title:"Faster",description:"Shot clock adds armor",disabled:!0},{id:"stronger",title:"Stronger",description:"Royals start with armor"}];l({tag:"menu-scene",scene:Oe(Z,(e=>e.meta.scene),!0),options:Oe(Z,(e=>e.meta.options),!0),render:function({scene:e,options:n}){return e!==z?u``:u`
    <section class="heading">
      <h1>GridCannon</h1>
      <octo-corner></octo-corner>
    </section>

    <section class="menu">
      <button onclick="${He}">New game</button>
      <h2>Options</h2>
      <section class="options">
        <section class="support">
          <h3>I need some help...</h3>

          ${We.map(De(n))}
        </section>

        <section class="challenge">
          <h3>I've done this before...</h3>

          ${je.map(De(n))}
        </section>
      </section>
    </section>
  `.style(X,'.menu {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  height: 80vh;\n}\n\n.options {\n  display: flex;\n  flex-direction: row;\n  max-width: 80%;\n}\n.options > {\n  display: flex;\n  flex-direction: column;\n}\n\n.toggle {\n  width: 100%;\n  margin-bottom: 10px;\n  position: relative;\n  display: inline-block;\n}\n.toggle * {\n  box-sizing: border-box;\n}\n.toggle *:before, .toggle *:after {\n  content: "";\n  position: absolute;\n}\n.toggle input {\n  height: 40px;\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  width: 40px;\n}\n.toggle label.toggle-item {\n  width: 3em;\n  height: 1.5em;\n  display: inline-block;\n  border-radius: 50px;\n  position: relative;\n  transition: all 0.2s ease;\n  transform-origin: 20% center;\n  cursor: pointer;\n  background: #af4c4c;\n  border: 0.5px solid rgba(117, 117, 117, 0.31);\n  box-shadow: inset 0px 0px 4px 0px rgba(0, 0, 0, 0.2), 0 -3px 4px rgba(0, 0, 0, 0.15);\n}\n.toggle label.toggle-item:before {\n  display: block;\n  top: 0.1em;\n  left: 0.1em;\n  border-radius: 2em;\n  transition: left 0.2s ease;\n  border: none;\n  width: 1.2em;\n  height: 1.2em;\n  box-shadow: inset 0.5px -1px 1px rgba(0, 0, 0, 0.35);\n  background: #fff;\n}\n.toggle label.toggle-item:after {\n  background: transparent;\n  height: calc(100% + 8px);\n  border-radius: 30px;\n  top: -5px;\n  width: calc(100% + 8px);\n  left: -4px;\n  z-index: 0;\n  box-shadow: inset 0px 2px 4px -2px rgba(0, 0, 0, 0.2), 0px 1px 2px 0px rgba(151, 151, 151, 0.2);\n}\n.toggle input:disabled + label {\n  background: rgba(117, 117, 117, 0.31);\n}\n.toggle input:checked + label {\n  background: #4caf50;\n}\n.toggle input:checked + label:before {\n  left: 1.5em;\n}\n.toggle input ~ span,\n.toggle input ~ small {\n  opacity: 60%;\n}\n.toggle input:checked ~ span,\n.toggle input:checked ~ small {\n  opacity: 100%;\n}\n\n/* Smartphones (portrait and landscape) ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n  .options {\n    max-width: 95%;\n  }\n  .options h3 {\n    margin: 0;\n    margin-bottom: 5px;\n    font-size: 0.5em;\n  }\n\n  .menu {\n    height: unset;\n  }\n\n  .toggle span {\n    display: block;\n  }\n  .toggle br {\n    display: none;\n  }\n}')}});const{dispatch:Be,getState:Me}=Z;function Ue(){Be(_())}function Je(){Be(E()),Be(Ne())}l({tag:"gameover-scene",scene:Oe(Z,(e=>e.meta.scene),!0),turn:Oe(Z,(e=>e.turn)),gamePhase:Oe(Z,(e=>ke(e)),!0),gameScore:Oe(Z,(e=>(e=>{const{grid:n,bonus:t}=e,r=he(n),a=r.filter((e=>ce(ue(e)))),i=r.filter((e=>!ce(ue(e)))),s=a.length,o=a.reduce(((e,n)=>e+Ce(n)),0),c=i.length,d=i.reduce(((e,n)=>e+Ce(n)),0),l=2*t.length,u=t.reduce(((e,n)=>e+n.reduce(((e,n)=>e+Ce(n)),0)),0),g={total:s+2*o,destroyedRoyals:s,destroyedArmor:o},p={total:c+2*d,remainingRoyals:c,remainingArmor:d},h={total:2*(l+2*u),bonusRoyals:l,bonusArmor:u};return{total:g.total-p.total+h.total,merits:g,demerits:p,extraPoints:h}})(e))),render:function({gamePhase:e,gameScore:n,scene:t,turn:r}){if(t!==F)return u``;const{isWon:a,isLost:i}=e;if(-1===r)return u``;if(!a&&!i)return u``;const{total:s,merits:o,demerits:c,extraPoints:d}=n;return u`
    <section id="gameover">
      <section class="overlay">
        <section class="heading">
          <h1>GAME OVER</h1>
        </section>
        <section class="controls">
          <button onclick=${Ue}>Back to menu</button>
          <button onclick=${Je}>New game</button>
        </section>

        <section class="score-footer">
          <p>Your score: ${s}</p>
          <p>
            Merits: +${o.total} <br />
            <small>x1 for each destroyed royal = 1 x
              ${o.destroyedRoyals}</small>
            <br />
            <small>x2 for each destroyed armor = 2 x ${o.destroyedArmor}</small>
            <br />
            <br />
            Demerits: -${c.total} <br />
            <small
              >x1 for each remaining royal = 1 x
              ${c.remainingRoyals}</small>
            <br />
            <small>x2 for each remaining armor = 2 x
              ${c.remainingArmor}</small>
            <br />
            <br />
            Extra Points: ++${d.total}<br />
            <small>x2 points (royal and armor) for every double-trigger = 2 x
              ${d.bonusRoyals+2*d.bonusArmor}</small>
            <br />
            <br />
          </p>
        </section>
      </section>
    </section>
  `.style(X,"#gameover {\n  z-index: 1;\n  position: fixed;\n  background-color: rgba(61, 72, 82, 0.5);\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n#gameover .overlay {\n  background-color: rgba(255, 255, 255, 0.95);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 80px;\n  padding: 80px;\n}\n\n/* Smartphones (portrait and landscape) ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n  #gameover .overlay {\n    margin: 10px;\n    padding: 10px;\n  }\n}")}});const{SETUP:Ge,SHUFFLE:Ke,DEAL:ze,ASIDE:Fe,CONSTRAINT:Ve,ROYAL:Ye,ARMOR:_e,PLAY:qe,PIP:Qe,TARGET:Ze,ACE:Xe,JOKER:en,END:nn,WIN:tn,LOSENOCARD:rn,LOSENOROYAL:an,LOSEOVERARMORED:sn}={SETUP:"i-setup",SHUFFLE:"i-shuffle",DEAL:"i-deal",ASIDE:"i-aside",CONSTRAINT:"i-constraint",ROYAL:"i-royal",ARMOR:"i-armor",PLAY:"i-play",PIP:"i-pip",TARGET:"i-target",ACE:"i-ace",JOKER:"i-joker",END:"i-end",WIN:"i-win",LOSENOCARD:"i-lose-nocard",LOSENOROYAL:"i-lose-noroyal",LOSEOVERARMORED:"i-lose-overarmored"},on=m([ke],(e=>{const n=n=>{switch(n){case Ge:case Ke:case ze:case Fe:return["complete"];case Ve:case Ye:case _e:return((e,n)=>{if(n.isWon||n.isLost)return["complete"];switch(e){case Ve:if(n.playingRoyalty||n.addingArmor)return["active"];break;case Ye:if(n.playingRoyalty)return["active"];break;case _e:if(n.addingArmor)return["active"]}return[]})(n,e);case qe:case Qe:case Ze:case Xe:case en:return((e,n)=>{if(n.isWon||n.isLost)return["complete"];switch(e){case qe:if(!n.isWon&&(n.playingPips||n.playingAce||n.playingJoker))return["active"];break;case Qe:if(!n.isWon&&n.playingPips)return["active"];break;case Ze:if(!n.isWon&&n.playingPips&&n.canTrigger)return["active"];break;case Xe:if(!n.isWon&&n.playingAce)return["active"];break;case en:if(!n.isWon&&n.playingJoker)return["active"]}return[]})(n,e);case nn:case tn:case rn:case an:case sn:return((e,n)=>{const t=n.isWon||n.isLost;switch(e){case nn:if(t)return["active"];break;case tn:if(n.isWon)return["active"];break;case rn:if(!n.isWon&&n.noCardsRemaining)return["active"];break;case an:if(!n.isWon&&n.noLegalMoves)return["active"];break;case sn:if(!n.isWon&&n.unwinnableArmor)return["active"]}return[]})(n,e)}return[]};return e=>n(e).join(" ")}));function cn(){const e=ne(on);return k(b,{children:[f("h2",{className:e(Ge),children:"The Setup"}),k("ul",{children:[f("li",{className:e(Ke),children:"Shuffle a deck of 52 cards"}),f("li",{className:e(ze),children:"Deal one card at a time in a 3x3 grid"}),f("li",{className:e(Fe),children:"Set any Royals to the side"})]}),f("h2",{className:e(Ve),children:"The Constraint"}),k("ul",{children:[f("li",{className:e(Ye),children:"Play a Royal on the highest aligned card"}),f("li",{className:e(_e),children:"Add an unplayable Pip to any Royal"})]}),f("h2",{className:e(qe),children:"The Play"}),k("ul",{children:[f("li",{className:e(Qe),children:"Play a Pip on any card of lower value"}),f("li",{className:e(Ze),children:k("small",{children:["Destroy inline royal if other cards in row/column are:",k("ul",{children:[k("li",{children:["King: Same ",f("strong",{children:"suit"})," and value ",f("strong",{children:">= 13"})]}),k("li",{children:["Queen: Same ",f("strong",{children:"color"})," and value ",f("strong",{children:">= 12"})]}),k("li",{children:["Jack: Any suit and value ",f("strong",{children:">= 11"})]}),f("li",{children:"Armor: Value of royal is increased by armor"})]})]})}),f("li",{className:e(Xe),children:"Play an Ace to reset any stack"}),f("li",{className:e(en),children:"Play a Joker to recall any stack"})]}),f("h2",{className:e(nn),children:"The End"}),k("ul",{children:[f("li",{className:e(tn),children:"WIN: All Royals have been knocked out"}),f("li",{className:e(rn),children:"LOSE: No cards remain to play"}),f("li",{className:e(an),children:"LOSE: No royals to add an unplayable Pip to"}),f("li",{className:e(sn),children:"LOSE: Too much armor on a royal"})]})]})}const dn={scene:"game",deckInHand:[{suit:"c",card:7},{suit:"s",card:7},{suit:"c",card:8}],currentCard:{suit:"c",card:9},skippedRoyalty:[],grid:[[],[{suit:"d",card:12},{destroyed:!0,card:-1,suit:""}],[{suit:"c",card:3},{suit:"c",card:11},{destroyed:!0,card:-1,suit:""}],[{suit:"d",card:3},{suit:"d",card:11},{destroyed:!0,card:-1,suit:""}],[],[{suit:"h",card:3},{suit:"d",card:13},{destroyed:!0,card:-1,suit:""}],[{suit:"h",card:10},{suit:"d",card:9},{suit:"d",card:7}],[{suit:"s",card:8},{suit:"d",card:8},{suit:"c",card:1}],[{suit:"c",card:10},{suit:"d",card:10},{suit:"s",card:6},{suit:"",card:0}],[{suit:"d",card:5},{suit:"s",card:12},{destroyed:!0,card:-1,suit:""}],[{suit:"h",card:11},{destroyed:!0,card:-1,suit:""}],[{suit:"h",card:8}],[{suit:"s",card:10},{suit:"",card:0}],[{suit:"s",card:9},{suit:"c",card:6},{suit:"c",card:5}],[{suit:"h",card:5},{suit:"s",card:2},{suit:"s",card:11}],[{suit:"c",card:4},{suit:"h",card:12}],[{suit:"h",card:9},{suit:"h",card:6},{suit:"d",card:6},{suit:"s",card:5},{suit:"s",card:4},{suit:"h",card:2},{suit:"d",card:1}],[{suit:"d",card:7},{suit:"d",card:4},{suit:"h",card:4},{suit:"s",card:3},{suit:"c",card:2},{suit:"h",card:1}],[{suit:"d",card:2},{suit:"s",card:1}],[{suit:"c",card:12},{destroyed:!0,card:-1,suit:""}],[],[{suit:"h",card:13},{destroyed:!0,card:-1,suit:""}],[{suit:"s",card:13},{destroyed:!0,card:-1,suit:""}],[{suit:"c",card:13},{destroyed:!0,card:-1,suit:""}],[]],bonus:[[[{suit:"c",card:12},{destroyed:!0,card:-1,suit:""}],[{suit:"d",card:12},{destroyed:!0,card:-1,suit:""}]]]},ln=e=>f("img",{src:e}),un=()=>{const{deckInHand:e}=ne(me);if(e&&e.length>0){const e=ln(le({destroyed:!0}));return f("div",{id:"deck",children:e})}return null},gn=()=>{const{deckInHand:e,skippedRoyalty:n}=ne(me);return e&&e.length>0?k("div",{id:"cardsRemaining",children:[e.length+n.length," cards remaining"]}):null},pn=()=>{const{currentCard:e}=ne(me);if(!e)return null;const{suit:n,card:t}=e,r=ln(le({suit:n,card:t}));return k(b,{children:[f("div",{id:"currentCard",className:ie(n),children:r}),"Current card"]})},hn=()=>{const e=ee();if(!ne((e=>e.meta.options)).timetravel)return null;const n=ne((e=>we(e.game)));return k(b,{children:["Time travel",f("button",{id:"timeTravelBtn",onClick:()=>{e(((e,n)=>{we(n().game)&&(e(A()),e(y.ActionCreators.undo()))}))},disabled:!n,children:"Undo move"})]})};function mn(){const e=ee(),n=ne(me);return k(b,{children:[k("section",{className:"cards",children:[f(pn,{}),f(un,{}),f(gn,{})]}),k("section",{className:"controls",children:[f("button",{id:"restartBtn",onClick:()=>{e(_())},children:"Exit back to menu"}),f("button",{id:"saveStateBtn",onClick:()=>{console.debug(JSON.stringify(n))},children:"Save state"}),f("button",{id:"loadStateBtn",onClick:()=>{e(D(dn))},children:"Load test state"}),f(hn,{})]})]})}const yn=()=>{const e=ne(ve);return f("p",{id:"hint",children:e})};function fn(){var e;return ne((e=F,n=>n.meta.scene===e))?f(b,{children:k("section",{id:"game",children:[f("section",{className:"heading",children:f("h1",{children:"GridCannon"})}),k("section",{id:"main",children:[f("section",{className:"left-bar",children:f(mn,{})}),f("section",{className:"grid-holder",children:f("section",{id:"grid",className:"grid",children:f(Re,{})})}),f("section",{className:"right-bar",children:f(cn,{})})]}),f("section",{className:"hint-footer",children:f(yn,{})})]})}):null}const bn=()=>k(b,{children:[f("splash-scene",{}),f("menu-scene",{}),f("game-scene",{}),f("gameover-scene",{}),f(fn,{})]});x.render(f(v,{store:Z,children:f(bn,{})}),document.getElementById("root"));
